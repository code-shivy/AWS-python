apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'

    alb.ingress.kubernetes.io/certificate-arn: ## your aws certs
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443},{"HTTP": 80}]'
    alb.ingress.kubernetes.io/inbound-cidrs: x.x.x.x/32, x.x.x.x/32        ## Needed incase you would like to give extra security to your deployment and make sure that airbyte is only accessible through your VPN or desired network. 
    alb.ingress.kubernetes.io/subnets: ## your VPC's public subnets
    alb.ingress.kubernetes.io/scheme: internet-facing
    kubernetes.io/ingress.class: alb
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    #alb.ingress.kubernetes.io/target-type: "instance"

    alb.ingress.kubernetes.io/success-codes: 200,302
  name: ## enter name of the ingress
  namespace: ## enter airbyte namespace
spec:
  rules:
  - host: ## your host name example your.airbyte.com
    http:
      paths:
      - backend:
          service:
            name: ssl-redirect
            port:
              name: use-annotation
        path: /
        pathType: Prefix
      - backend:
          service:
            name: ## airbyte service name replace this with the output of: kubectl -n airbyte get svc | grep webapp-svc | awk '{print $1}'
            port:
              number: 80
        path: /
        pathType: Prefix
